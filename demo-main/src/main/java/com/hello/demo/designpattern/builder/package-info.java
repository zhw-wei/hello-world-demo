/**
 * 建造者模式，又叫生成器模式，它可以将复杂对象的建造过程抽象出来（抽象类别），使这个过程的不同实现方法可以构造出不同表现（属性）的对象<br/>
 * 建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节<br/>
 * <br/>
 * 建造者模式的四个角色：<br/>
 * 1. product产品角色：一个具体的产品对象<br/>
 * 2. builder抽象建造者：创建一个product对象的各个部件指定的接口/抽象类<br/>
 * 3. concreteBuilder具体建造者：实现接口，构建和装配各个部件<br/>
 * 4. director指挥者：构建一个使用builder接口的对象。它主要是用于创建一个复杂的对象。
 *      它主要有两个作用，一是：隔离了客户和对象的生产过程，二是：负责控制产品对象的生产过程
 */
package com.hello.demo.designpattern.builder;