/**
 * 设计模式demo<br/>
 * 设计模式常用的七大原则：1.单一职责原则 2.接口隔离原则 3.依赖倒置原则 4.里氏替换原则 5.开闭原则 6.迪米特法则(最少知道原则) 7.合成复用原则<br/>
 * 设计模式的目的： 1.代码重用性 2.可读性 3.可扩展性 4.可靠性 5.使程序呈现高内聚，低耦合<br/>
 * 设计模式包含了面向对象的精髓，懂得了设计模式，你就懂了面向对象分析和设计的精要<br/>
 * 设计模式分为三种类型：<br/>
 * 1. 创建型模式： 单例模式、简单工厂模式、原型模式、建造者模式、工厂方法模式、抽象工厂模式<br/>
 * 2. 结构型模式： 适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式<br/>
 * 3. 行为型模式： 模板方法模式、命令模式、访问者模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式(Interpreter模式)、
 *               状态模式、策略模式、责任链模式(职责链模式)<br/>
 * <br/>
 * 三种工厂模式：工厂方法模式、简单工厂模式、抽象工厂原则<br/>
 * 工厂模式的意义：将实例化对象的代码提取出来，放到一个类中统一管理和维护，达到和主项目的依赖关系的解耦，从而提高项目的扩展和维护性<br/>
 * 设计模式的依赖抽象原则<br/>
 * 不要让类继承具体类，而是继承抽象类或者是实现接口，不要覆盖基类中已经实现的方法
 * <br/>
 *
 */
package com.hello.demo.designpattern;